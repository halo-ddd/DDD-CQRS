<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <axon:annotation-config/>
    <!-- 
    <context:component-scan base-package="org.axonframework.samples.trader"/>
     -->

    <axon:event-bus id="eventBus"/>

    <axon:command-bus id="commandBus">
        <axon:dispatchInterceptors>
            <bean class="org.axonframework.commandhandling.interceptors.BeanValidationInterceptor"/>
        </axon:dispatchInterceptors>
    </axon:command-bus>
    
	  <axon:cluster id="customerReplayingCluster">
	    <!-- the next element makes this Cluster replayable -->
	   	 <axon:replay-config event-store="eventStore" />
	   	 <axon:selectors>
	        <axon:package prefix="com.lyqf.hanndler.event"/>
	   	 </axon:selectors>
	 </axon:cluster>
    
    
	<!-- 
    <bean id="snapshotter" class="org.axonframework.eventsourcing.SpringAggregateSnapshotter">
        <property name="eventStore" ref="eventStore"/>
        <property name="executor" ref="taskExecutor"/>
    </bean>
	 -->
	<!-- 
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2"/>
        <property name="maxPoolSize" value="5"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>
	 -->
	<!-- 
    <bean id="ehcache" class="org.axonframework.cache.EhCacheAdapter">

        <constructor-arg name="ehCache" ref="wrappedEhcache"/>
    </bean>
	 -->
	<!-- 
    <bean id="wrappedEhcache" factory-bean="cacheManager" factory-method="getCache">
        <constructor-arg value="testCache"/>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>

	 -->

    <bean id="eventStore" class="org.axonframework.eventstore.mongo.MongoEventStore">
        <constructor-arg ref="axonMongoTemplate"/>
    </bean>
	<!-- 
    <bean id="sagaRepository" class="org.axonframework.saga.repository.mongo.MongoSagaRepository">
        <constructor-arg ref="mongoSagaTemplate"/>
        <property name="resourceInjector">
            <bean class="org.axonframework.saga.spring.SpringResourceInjector"/>
        </property>
    </bean>
	 -->


        <bean id="axonMongoTemplate" class="org.axonframework.eventstore.mongo.DefaultMongoTemplate">
            <constructor-arg index="0" ref="mongo"/>
            <constructor-arg index="1" value="${spring.data.mongodb.database}"/>
            <constructor-arg index="2" value="domainevents"/>
            <constructor-arg index="3" value="snapshotevents"/>
            <constructor-arg index="4">
                <null/>
            </constructor-arg>
            <constructor-arg index="5">
                <null/>
            </constructor-arg>
        </bean>
		<!-- 
        <bean id="mongoSagaTemplate" class="org.axonframework.saga.repository.mongo.DefaultMongoTemplate">
            <constructor-arg index="0" ref="mongo"/>
            <constructor-arg index="1" value="axontrader"/>
            <constructor-arg index="2" value="snapshotevents"/>
            <constructor-arg index="3">
                <null/>
            </constructor-arg>
            <constructor-arg index="4">
                <null/>
            </constructor-arg>
        </bean>
		 -->

</beans>